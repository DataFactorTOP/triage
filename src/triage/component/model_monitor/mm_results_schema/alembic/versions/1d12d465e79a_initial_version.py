"""initial version

Revision ID: 1d12d465e79a
Revises:
Create Date: 2018-06-22 19:07:54.908732

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1d12d465e79a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA model_monitor;")

    op.create_table(
        'feature_metric_defs',
        sa.Column('feature_metric_id', sa.Integer(), nullable=False),
        sa.Column('metric_type', sa.Text(), nullable=False),
        sa.Column('threshold', sa.Float(), nullable=True),
        sa.Column('use_top_entities', sa.Boolean(), nullable=False),
        sa.Column('use_lag_as_reference', sa.Boolean(), nullable=False),
        sa.Column('compare_interval', sa.Interval(), nullable=False),
        sa.PrimaryKeyConstraint('feature_metric_id')
    )
    op.create_table(
        'feature_metrics',
        sa.Column('feature_metric_id', sa.Integer(), nullable=False),
        sa.Column('model_id', sa.Integer(), nullable=False),
        sa.Column('as_of_date', sa.DateTime(), nullable=False),
        sa.Column('feature', sa.Text(), nullable=False),
        sa.Column('metric_value', sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint('feature_metric_id', 'model_id', 'as_of_date', 'feature'),
        schema='model_monitor'
    )
    op.create_table(
        'model_group_parameters',
        sa.Column('model_group_id', sa.Integer(), nullable=False),
        sa.Column('model_parameter_type', sa.Text(), nullable=False),
        sa.Column('model_parameter', sa.Text(), nullable=False),
        sa.Column('model_parameter_value', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('model_group_id', 'model_parameter_type', 'model_parameter'),
        schema='model_monitor'
    )
    op.create_table(
        'model_parameters',
        sa.Column('model_id', sa.Integer(), nullable=False),
        sa.Column('model_parameter_type', sa.Text(), nullable=False),
        sa.Column('model_parameter', sa.Text(), nullable=False),
        sa.Column('model_parameter_value', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('model_id', 'model_parameter_type', 'model_parameter'),
        schema='model_monitor'
    )
    op.create_table(
        'prediction_metrics',
        sa.Column('prediction_metric_id', sa.Integer(), nullable=False),
        sa.Column('model_id', sa.Integer(), nullable=False),
        sa.Column('as_of_date', sa.DateTime(), nullable=False),
        sa.Column('metric_value', sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint('prediction_metric_id', 'model_id', 'as_of_date'),
        schema='model_monitor'
    )
    op.create_table(
        'prediction_metric_defs',
        sa.Column('prediction_metric_id', sa.Integer(), nullable=False),
        sa.Column('metric_type', sa.Text(), nullable=False),
        sa.Column('threshold', sa.Float(), nullable=True),
        sa.Column('use_top_entities', sa.Boolean(), nullable=False),
        sa.Column('use_lag_as_reference', sa.Boolean(), nullable=False),
        sa.Column('compare_interval', sa.Interval(), nullable=False),
        sa.PrimaryKeyConstraint('prediction_metric_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prediction_metric_defs')
    op.drop_table('prediction_metrics', schema='model_monitor')
    op.drop_table('model_parameters', schema='model_monitor')
    op.drop_table('model_group_parameters', schema='model_monitor')
    op.drop_table('feature_metrics', schema='model_monitor')
    op.drop_table('feature_metric_defs')

    op.execute("DROP SCHEMA model_monitor;")
    # ### end Alembic commands ###
